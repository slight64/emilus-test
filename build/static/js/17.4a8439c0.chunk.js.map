{"version":3,"sources":["assets/data/constants.js","components/shared-components/AvatarStatus/index.js","views/app-views/user-pages/user-list/UserView.js","views/app-views/user-pages/user-list/index.js"],"names":["MOCK_AVATAR","renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","UserView","this","data","visible","close","width","placement","onClose","closable","username","dashed","UserOutlined","MobileOutlined","phone","MailOutlined","email","CompassOutlined","address","city","IdcardOutlined","href","company","GlobalOutlined","website","Component","UserList","history","useHistory","useState","filter","setFilter","useSelector","state","users","loadingUsersList","filteredUsers","useMemo","Utils","wildCardSearch","userProfileVisible","setUserProfileVisible","selectedUser","setSelectedUser","dispatch","useDispatch","useEffect","getUsersAction","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","elm","EditOutlined","push","EyeOutlined","userInfo","danger","DeleteOutlined","userId","message","success","content","duration","bodyStyle","padding","Flex","alignItems","justifyContent","mobileFlex","placeholder","prefix","SearchOutlined","onChange","e","value","currentTarget","onSearch","Loading","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/17.4a8439c0.chunk.js","sourcesContent":["export const MOCK_AVATAR = '/img/avatars/thumb-1.jpg';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider } from 'antd';\r\nimport {\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n  CompassOutlined,\r\n  IdcardOutlined,\r\n  GlobalOutlined,\r\n} from '@ant-design/icons';\r\nimport { MOCK_AVATAR } from 'assets/data/constants';\r\n\r\nexport class UserView extends Component {\r\n  render() {\r\n    const { data, visible, close } = this.props;\r\n    return (\r\n      <Drawer\r\n        width={300}\r\n        placement=\"right\"\r\n        onClose={close}\r\n        closable={false}\r\n        visible={visible}\r\n      >\r\n        <div className=\"text-center mt-3\">\r\n          <Avatar size={80} src={MOCK_AVATAR} />\r\n          <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n          <span className=\"text-muted\">{data?.username}</span>\r\n        </div>\r\n        <Divider dashed />\r\n        <div className=\"\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n          <p>\r\n            <UserOutlined />\r\n            <span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n          <p>\r\n            <MobileOutlined />\r\n            <span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n          </p>\r\n          <p>\r\n            <MailOutlined />\r\n            <span className=\"ml-3 text-dark\">\r\n              {data?.email ? data?.email : '-'}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <CompassOutlined />\r\n            <span className=\"ml-3 text-dark\">{data?.address.city}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Company</h6>\r\n          <p>\r\n            <IdcardOutlined />\r\n            <a href=\"/#\" className=\"ml-3 text-dark\">\r\n              {data?.company.name ? data?.company.name : '-'}\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Social media</h6>\r\n          <p>\r\n            <GlobalOutlined />\r\n            <a href=\"/#\" className=\"ml-3 text-dark\">\r\n              {data?.website ? data?.website : '-'}\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserView;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Table, Tag, Tooltip, message, Button, Input } from 'antd';\r\nimport {\r\n  EyeOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { getUsersAction } from 'redux/actions/Users';\r\nimport { MOCK_AVATAR } from 'assets/data/constants';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom';\r\nimport Utils from 'utils';\r\nimport UserView from './UserView';\r\nimport Loading from 'components/shared-components/Loading';\r\n\r\nconst UserList = () => {\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useState('');\r\n  const { users, loadingUsersList } = useSelector((state) => state.users);\r\n\r\n  const filteredUsers = useMemo(\r\n    () => Utils.wildCardSearch(users, filter),\r\n    [users, filter]\r\n  );\r\n  const [userProfileVisible, setUserProfileVisible] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersAction());\r\n  }, [dispatch]);\r\n\r\n  const deleteUser = (userId) => {\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n  };\r\n\r\n  const showUserProfile = (userInfo) => {\r\n    setUserProfileVisible(true);\r\n    setSelectedUser(userInfo);\r\n  };\r\n\r\n  const closeUserProfile = () => {\r\n    setUserProfileVisible(false);\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setFilter(value);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: 'User',\r\n      dataIndex: 'name',\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <AvatarStatus\r\n            src={MOCK_AVATAR}\r\n            name={record.name}\r\n            subTitle={record.email}\r\n          />\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.name.toLowerCase();\r\n          b = b.name.toLowerCase();\r\n          return a < b ? -1 : b < a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'User Name',\r\n      dataIndex: 'username',\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.username.toLowerCase();\r\n          b = b.username.toLowerCase();\r\n          return a < b ? -1 : b < a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'company',\r\n      dataIndex: 'company',\r\n      render: (company) => company.name,\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.company.name[0].toLowerCase();\r\n          b = b.company.name[0].toLowerCase();\r\n          return a < b ? -1 : b < a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      render: (id) => <Tag className=\"text-capitalize\">{id}</Tag>,\r\n      sorter: {\r\n        compare: (a, b) => a.id - b.id,\r\n      },\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'actions',\r\n      render: (_, elm) => (\r\n        <div className=\"text-right\">\r\n          <Tooltip title=\"Edit\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                history.push(`edit-profile/${elm.id}`);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"View\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              icon={<EyeOutlined />}\r\n              onClick={() => {\r\n                showUserProfile(elm);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <Button\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                deleteUser(elm.id);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card bodyStyle={{ padding: '20px' }}>\r\n      <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n        <div className=\"mr-md-3 mb-3\">\r\n          <Input\r\n            placeholder=\"Search\"\r\n            prefix={<SearchOutlined />}\r\n            onChange={(e) => onSearch(e)}\r\n          />\r\n        </div>\r\n      </Flex>\r\n      {loadingUsersList && <Loading />}\r\n      {users && (\r\n        <Table columns={tableColumns} dataSource={filteredUsers} rowKey=\"id\" />\r\n      )}\r\n      <UserView\r\n        data={selectedUser}\r\n        visible={userProfileVisible}\r\n        close={() => {\r\n          closeUserProfile();\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}