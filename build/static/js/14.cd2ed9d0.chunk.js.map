{"version":3,"sources":["views/app-views/planner/furniture/Furniture.js","views/app-views/planner/index.js"],"names":["Furniture","type","handleClick","style","console","log","backgroundColor","width","height","onClick","Droppable","props","setNodeRef","useDroppable","id","ref","className","children","Draggable","useDraggable","attributes","listeners","transform","CSS","Translate","toString","Planner","useState","itemsCount","setItemsCount","ceils","Array","fill","parent","item","map","el","i","onDragEnd","e","newItem","active","data","current","title","over","temp","push","_"],"mappings":"wQAoCeA,G,OAlCG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrBC,EAAQ,GACZ,OAAQF,GACN,IAAK,QACHG,QAAQC,IAAI,GACZF,EAAQ,CACNG,gBAAiB,UACjBC,MAAO,OACPC,OAAQ,QAEV,MACF,IAAK,QACHL,EAAQ,CACNG,gBAAiB,UACjBC,MAAO,OACPC,OAAQ,QAEV,MACF,QACEL,EAAQ,CACNG,gBAAiB,OACjBC,MAAO,OACPC,OAAQ,QAKd,OACE,qBAAKC,QAASP,EAAaC,MAAOA,EAAlC,SACGF,M,SC0BA,SAASS,EAAUC,GAAQ,IACxBC,EAAeC,YAAa,CAClCC,GAAIH,EAAMG,KADJF,WAIR,OACE,qBAAKG,IAAKH,EAAYI,UAAU,OAAhC,SACGL,EAAMM,WAKN,SAASC,EAAUP,GAAQ,IAAD,EAC0BQ,YAAa,CACpEL,GAAIH,EAAMG,KADJM,EADuB,EACvBA,WAAYC,EADW,EACXA,UAAWT,EADA,EACAA,WAAYU,EADZ,EACYA,UAGrCnB,EAAQ,CACZmB,UAAWC,IAAIC,UAAUC,SAASH,IAGpC,OACE,yDACEP,IAAKH,EACLT,MAAOA,GACHkB,GACAD,GAJN,IAKEJ,UAAU,OALZ,SAOGL,EAAMM,YAKES,UAnFf,WAAoB,IAAD,EACmBC,mBAAS,IAD5B,mBACVC,EADU,KACEC,EADF,OAEyBF,oBAAS,GAFlC,mBAIXG,GAJW,UAIHC,MAAM,KAAKC,KAAK,KAJb,EAMWL,mBAAS,MANpB,mBAMVM,EANU,KAgBXC,GAhBW,KAGC,CAAC,QAAS,SAaLC,KAAI,SAACC,EAAIC,GAC9B,OACE,cAACnB,EAAD,CAAWJ,GAAIuB,EAAf,SACE,cAAC,EAAD,CAAWpC,KAAMmC,KADIC,OAU3B,OACE,qBAAKrB,UAAU,UAAf,SACE,cAAC,IAAD,CAAYsB,UAtBO,SAACC,GAAO,IAAD,IACtBC,EAAO,UAAGD,EAAEE,OAAOC,KAAKC,eAAjB,aAAG,EAAuBC,MACvC,GAAmB,WAAf,UAAAL,EAAEM,YAAF,eAAQ/B,KAAmB0B,EAA/B,CACA,IAAMM,EAAI,YAAOlB,GACjBkB,EAAKC,KAAKP,GACVX,EAAciB,KAiBZ,SACE,sBAAK9B,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,UAAf,SAA0BkB,MAE5B,qBAAKlB,UAAU,gBAAf,SACE,qBAAKA,UAAU,QAAf,SACGc,EAAMK,KAAI,SAACa,EAAGX,GAAJ,OACT,cAAC3B,EAAD,CAAmBI,GAAI,QAAvB,SACGmB,IAAWI,EAAIH,EAAO,IADTG","file":"static/js/14.cd2ed9d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Furniture = ({ type, handleClick }) => {\r\n  let style = {};\r\n  switch (type) {\r\n    case 'chair':\r\n      console.log(1);\r\n      style = {\r\n        backgroundColor: '#d1d8dd',\r\n        width: '30px',\r\n        height: '30px',\r\n      };\r\n      break;\r\n    case 'table':\r\n      style = {\r\n        backgroundColor: '#dfffff',\r\n        width: '30px',\r\n        height: '30px',\r\n      };\r\n      break;\r\n    default:\r\n      style = {\r\n        backgroundColor: '#ddd',\r\n        width: '30px',\r\n        height: '30px',\r\n      };\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick} style={style}>\r\n      {type}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Furniture;\r\n","import React, { useState } from 'react';\r\nimport { DndContext, useDroppable } from '@dnd-kit/core';\r\nimport { useDraggable } from '@dnd-kit/core';\r\nimport './planner.css';\r\nimport Furniture from './furniture/Furniture';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\nfunction Planner() {\r\n  const [itemsCount, setItemsCount] = useState([]);\r\n  const [itemDraggable, setItemDraggable] = useState(false);\r\n  const toolsList = ['chair', 'table'];\r\n  const ceils = Array(400).fill('');\r\n\r\n  const [parent, setParent] = useState(null);\r\n\r\n  const addItemToBoard = (e) => {\r\n    const newItem = e.active.data.current?.title;\r\n    if (e.over?.id !== 'board' || !newItem) return;\r\n    const temp = [...itemsCount];\r\n    temp.push(newItem);\r\n    setItemsCount(temp);\r\n  };\r\n\r\n  const item = toolsList.map((el, i) => {\r\n    return (\r\n      <Draggable id={i} key={i}>\r\n        <Furniture type={el} />\r\n      </Draggable>\r\n    );\r\n  });\r\n\r\n  function handleDragEnd(event) {\r\n    const { over } = event;\r\n    setParent(over ? over.id : null);\r\n  }\r\n  return (\r\n    <div className=\"planner\">\r\n      <DndContext onDragEnd={addItemToBoard}>\r\n        <div className=\"planner-wrapper\">\r\n          <div className=\"planner-toolbar\">\r\n            <div className=\"toolbar\">{item}</div>\r\n          </div>\r\n          <div className=\"planner-board\">\r\n            <div className=\"board\">\r\n              {ceils.map((_, i) => (\r\n                <Droppable key={i} id={'board'}>\r\n                  {parent === i ? item : ''}\r\n                </Droppable>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DndContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Droppable(props) {\r\n  const { setNodeRef } = useDroppable({\r\n    id: props.id,\r\n  });\r\n\r\n  return (\r\n    <div ref={setNodeRef} className=\"ceil\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Draggable(props) {\r\n  const { attributes, listeners, setNodeRef, transform } = useDraggable({\r\n    id: props.id,\r\n  });\r\n  const style = {\r\n    transform: CSS.Translate.toString(transform),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...listeners}\r\n      {...attributes}\r\n      className=\"item\"\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Planner;\r\n"],"sourceRoot":""}